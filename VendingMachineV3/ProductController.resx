<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="txtPrice.IconRight" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAATSSURBVGhD7ZjrTxRXGMb5I6r/hU20aWuxil3Ymb3OzlLAUFMkodjGaNKED0ZtatF+bNK0TZo0
        acXCsvddsJIarMQiYnqRm9BEqm3F2oJim73BAh94+57pgezuvLN7do2sH/ZJfglkznnmec+cG1RVVFFF
        FT37ckfd2+39rg8dfeoEkkLgKcG8x5Gz7J389U8me9TdiIYJ/oKtJOHodzXwGKWJh1/PMd5K1ksuQmLT
        BkcBgTITtwYbt/FY4mJznjArF2d4LHFhp8kck5KwBBxg7rZtInXbwRZSyLZG4FQa57HEhR2TuUbFYou4
        oK3/bUivpmFtbU1jemEGJI+dbJ+HBI8lLsJEGFtY0UZe7rXDx6OfboZnDN+7Bha/g+yXDx5LXJRJIWxh
        F1h6nPD+1U64dGcQpuZvwcPEw6wCzt08j4U5tLaUhxE8lrgok3xYgwq0Rtvh9uJsVuBc2HS6PjcKRwfe
        BdmLhUTFCuGxxEWZGMHm+sFIKzxOPSZDU6yurcI3swPg9NZr/SnfTHgscVEmRrCRvH7/hi7k3/F5bbQZ
        s4u/Zi3mDQIzIVwvTtI3Ex5LXJQJSVQF1dcIK6srWcHCv0RA7nFoC5bBFvSB4EHwTHlheWVZa3M/9ic0
        Bt4o7xdgc/jwxSNZ4RnvXDyqC8bayj4HHL5wBK7NjUBLpE3bsTLbGMFjicuGnUSwYqhDfW/pCvBOB0DC
        3caKRej64A4k4bSzYvjcZ0bwWOKiTIyQcetcTOoX8NU/hqFj8Lj2XMZpxIJT/UXgscRFmRhhCSjw5XiX
        roAN2O50+bcrcPzKKTD32EsqhMcSF2ViCC5ki0eBUWInyoVdJd7EuW/Bc4P0MoDHEhdlkg+2FmSPE7om
        uyG+nCDDb/BP6l/t0CvmS/BY4qJMCoJfQsY70OuBZvj85y/g1sK0dmBRRUzhMwm3VtKHgMcSlxU7lYqF
        fQ28MpsxYHOoBc5PeiCVXtIV0drXrrWlPHLhscRlYfNaABm3yTq8Htd58LDCKUE9N+MO9N7QB7oCTg6d
        xkL1fSh4LHHJ2KkQEguPW+T390bwmjwC9f5mMOOOJEf07Q6EDukK6Bg8ARIWndnWCB5LXBJ2KoQJR73/
        9sBmoAW8On904xNczG58ZodaPHVr8TCz4O+X7n6XFX5pZQmcviYsjvbOhccSF2WSiRlHtSnYgvca/QUt
        lU7B9PwM/DD3E4w9mIDkclLXJoB3JVYg5U3BY4nLjCNTCBMG6Lh8CrfNuC5gPn58cBPMHhXqcPpQvhQ8
        lrjqsJMIJp+Cfwu0a6GosJkk00k8J3px3bigFhcv5WcEjyWuWuwkiinoghq8IrRdOAazj+5khf4rNg9D
        vw/j2vgMFFzk+/GrmXDkKZ988Fjiei2sQrHs/dqOf7hkF3Ds2xOwDxd7jV+B/TjqVD8ReCxx1YTVBALF
        UN1lg0cZt9IYrg3J2wQ1Ibp9EcR5LHHtC6kTe/HFxfCqV4Hd52yw+yvr/+DPe3oVsm2RFP+PreqQenYP
        dn4mCLs6eSxxVUfd218JqgkEykzsBa/zOR6rOL0cdDW8FFDXESgT6y/63fU8Tmna6XM17PKrcQS2mNiu
        Jw2/oZ3Bxm07fOqZ533qGJJE4CnBvMd2eF2dJU+biiqqqKItVFXVf6S0UytOp8V5AAAAAElFTkSuQmCC
</value>
  </data>
</root>